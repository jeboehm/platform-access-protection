---

name: Build extension
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  EXTENSION_NAME: platform-access-protection
  SHOPWARE_CLI_ACCOUNT_EMAIL: ${{ secrets.ACCOUNT_USER }}
  SHOPWARE_CLI_ACCOUNT_PASSWORD: ${{ secrets.ACCOUNT_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # fetch all git entries for changelog generation
          fetch-depth: 0

      - name: Install shopware-cli
        uses: FriendsOfShopware/shopware-cli-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & create zip
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          shopware-cli extension zip --git-commit ${{ github.sha }} . --release
          mv *-${{ github.sha }}.zip ${{ env.EXTENSION_NAME }}.zip

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
            name: ${{ env.EXTENSION_NAME }}
            path: ${{ env.EXTENSION_NAME }}.zip

      - name: Get version
        run: |
          echo "EXTENSION_VERSION=$(jq ".version" composer.json -r)" >> $GITHUB_ENV

      - uses: mukunku/tag-exists-action@v1.4.0
        id: checkTag
        with:
            tag: ${{ env.EXTENSION_VERSION }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update store page
        if: steps.checkTag.outputs.exists != 'true' || contains(github.event.head_commit.message, '[store update]')
        run: shopware-cli account producer extension info push $(pwd)/

      - name: Update zip file to store
        if: steps.checkTag.outputs.exists != 'true'
        run: shopware-cli account producer extension upload $(pwd)/${EXTENSION_NAME}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Changelog
        if: steps.checkTag.outputs.exists != 'true'
        run: shopware-cli extension get-changelog $(pwd)/${EXTENSION_NAME}.zip > /tmp/changelog.txt

      - name: Unzip
        run: |
          unzip -o -q "${EXTENSION_NAME}.zip" -d ./toDeploy
          mv "${EXTENSION_NAME}.zip" /tmp/
          find ./ -maxdepth 1 ! -name "toDeploy" ! -name ".git" ! -name "." ! -name ".." -exec rm -rf {} \;
          mv ./toDeploy/${EXTENSION_NAME}/* ./
          rm -rf ./toDeploy
          rm -rf ./vendor

      - name: Commit
        if: steps.checkTag.outputs.exists != 'true'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add -f .
          git commit -m "chore: Build release"
          git tag ${EXTENSION_VERSION}
          git push origin ${EXTENSION_VERSION}

      - name: Create a GitHub release
        if: steps.checkTag.outputs.exists != 'true'
        uses: ncipollo/release-action@v1
        with:
          artifacts: /tmp/${{ env.EXTENSION_NAME }}.zip
          tag: ${{ env.EXTENSION_VERSION }}
          name: ${{ env.EXTENSION_VERSION }}
          bodyFile: /tmp/changelog.txt
